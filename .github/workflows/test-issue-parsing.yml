name: Issue Parsing Test
on:
  pull_request:
    branches:
     - main
jobs:
  check_if_template_repository:
    name: Check if template repository.
    runs-on: ubuntu-latest
    steps:
        - name: Generate App Token
          uses: tibdex/github-app-token@v2
          id: token
          with:
            app_id: ${{ vars.APP_ID}}
            private_key: ${{ secrets.APP_PEM_PRIVATE_KEY}}
        
        - name: Check if template repository
          shell: bash
          id: github_api
          env:
            APP_TOKEN: ${{ steps.token.outputs.token }}
          run: |
            RESPONSE=$(curl -L --silent \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $APP_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/$GITHUB_REPOSITORY )
            echo "EXIT_STATUS=$(echo $RESPONSE | jq -r ".is_template")" >> $GITHUB_OUTPUT

    outputs:
      is_template: ${{ steps.github_api.outputs.EXIT_STATUS }}

  test_issue_parsing:
    name: Test Issue Parsing Scripting
    needs: check_if_template_repository
    if: |
      needs.check_if_template_repository.outputs.is_template == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Poetry
        uses: snok/install-poetry@v1.3.4
        with:
          installer-parallel: true
          virtualenvs-create: true
          virtualenvs-in-project: true
        
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: poetry
      
      - name: Install Poetry Project
        run: |
          poetry env use 3.11
          poetry install --no-interaction

      - name: Run Issue Parsing Tests
        run: |
          poetry run pytest
      
        
      
  