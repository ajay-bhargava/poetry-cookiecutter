name: Docker Test

on:
  pull_request:
    branches:
      - main

jobs:
  check_if_template_repository:
    name: Check if template repository.
    runs-on: ubuntu-latest
    steps:
        - name: Generate App Token
          uses: tibdex/github-app-token@v2
          id: token
          with:
            app_id: ${{ vars.APP_ID}}
            private_key: ${{ secrets.APP_PEM_PRIVATE_KEY}}
        
        - name: Check if template repository
          shell: bash
          id: github_api
          env:
            APP_TOKEN: ${{ steps.token.outputs.token }}
          run: |
            RESPONSE=$(curl -L --silent \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $APP_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/$GITHUB_REPOSITORY )
            echo "EXIT_STATUS=$(echo $RESPONSE | jq -r ".is_template")" >> $GITHUB_OUTPUT
    outputs:
      is_template: ${{ steps.github_api.outputs.EXIT_STATUS }}

  test:
    runs-on: ubuntu-latest
    needs: check_if_template_repository
    if: |
      needs.check_if_template_repository.outputs.is_template == 'true'
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.10"]

    name: Python ${{ matrix.python-version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: template

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"

      - name: Scaffold Python package
        run: |
          pip install --no-input cruft
          cruft create --no-input --extra-context '{"package_name": "My Package", "python_version": "3.8", "docker_image":"radixai/python-gpu:$PYTHON_VERSION-cuda11.8", "with_fastapi_api": "1", "with_typer_cli": "1"}' ./template/

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 21

      - name: Install @devcontainers/cli
        run: npm install --location=global @devcontainers/cli@0.55.0

      - name: Start Dev Container with Python ${{ matrix.python-version }}
        run: |
          git config --global init.defaultBranch main
          git init
          git checkout -b test
          git add .
          PYTHON_VERSION=${{ matrix.python-version }} devcontainer up --workspace-folder .
        working-directory: ./my-package/

      - name: Lint package
        run: devcontainer exec --workspace-folder my-package poe lint

      - name: Test package
        run: devcontainer exec --workspace-folder my-package poe test

      - name: Build app Docker image
        uses: docker/build-push-action@v5
        with:
          build-args: |
            SOURCE_BRANCH=${{ env.GITHUB_REF }}
            SOURCE_COMMIT=${{ env.GITHUB_SHA }}
          context: ./my-package/
          target: app
